Terminals unused in grammar

    TK_ERRO


Grammar

    0 $accept: program $end

    1 program: ε
    2        | global_var program
    3        | func program

    4 global_var: var_decl ','

    5 func: header comm_block cleanup_table

    6 header: '(' new_table par_list ')' TK_OC_OR type '/' TK_IDENTIFICADOR
    7       | '(' new_table ')' TK_OC_OR type '/' TK_IDENTIFICADOR

    8 par_list: par_list ';' type TK_IDENTIFICADOR
    9         | type TK_IDENTIFICADOR

   10 arg_list: exp
   11         | arg_list ';' exp

   12 ret_comm: TK_PR_RETURN exp

   13 comm_block: '{' '}'
   14           | '{' comm_lst '}'

   15 comm_lst: comm ','
   16         | comm_lst comm ','

   17 comm: new_table comm_block cleanup_table
   18     | var_decl
   19     | attrib_comm
   20     | func_call
   21     | ret_comm
   22     | flux_ctrl

   23 var_decl: type id_list

   24 attrib_comm: TK_IDENTIFICADOR '=' exp

   25 func_call: TK_IDENTIFICADOR '(' arg_list ')'
   26          | TK_IDENTIFICADOR '(' ')'

   27 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   28          | TK_PR_IF '(' exp ')' new_table comm_block cleanup_table
   29          | TK_PR_WHILE '(' exp ')' new_table comm_block cleanup_table

   30 exp: or_exp

   31 or_exp: or_exp TK_OC_OR and_exp
   32       | and_exp

   33 and_exp: and_exp TK_OC_AND eq_exp
   34        | eq_exp

   35 eq_exp: eq_exp TK_OC_EQ comp_exp
   36       | eq_exp TK_OC_NE comp_exp
   37       | comp_exp

   38 comp_exp: comp_exp '<' sum_exp
   39         | comp_exp '>' sum_exp
   40         | comp_exp TK_OC_LE sum_exp
   41         | comp_exp TK_OC_GE sum_exp
   42         | sum_exp

   43 sum_exp: sum_exp '+' mult_exp
   44        | sum_exp '-' mult_exp
   45        | mult_exp

   46 mult_exp: mult_exp '*' un_exp
   47         | mult_exp '/' un_exp
   48         | mult_exp '%' un_exp
   49         | un_exp

   50 un_exp: '-' un_exp
   51       | '!' un_exp
   52       | operand

   53 operand: TK_IDENTIFICADOR
   54        | lit
   55        | func_call
   56        | '(' exp ')'

   57 id_list: TK_IDENTIFICADOR
   58        | id_list ';' TK_IDENTIFICADOR

   59 lit: TK_LIT_INT
   60    | TK_LIT_FLOAT
   61    | TK_LIT_FALSE
   62    | TK_LIT_TRUE

   63 type: TK_PR_INT
   64     | TK_PR_FLOAT
   65     | TK_PR_BOOL

   66 new_table: ε

   67 cleanup_table: ε


Terminals, with rules where they appear

    $end (0) 0
    '!' <node> (33) 51
    '%' <node> (37) 48
    '(' (40) 6 7 25 26 27 28 29 56
    ')' (41) 6 7 25 26 27 28 29 56
    '*' <node> (42) 46
    '+' <node> (43) 43
    ',' (44) 4 15 16
    '-' <node> (45) 44 50
    '/' <node> (47) 6 7 47
    ';' (59) 8 11 58
    '<' <node> (60) 38
    '=' <node> (61) 24
    '>' <node> (62) 39
    '{' (123) 13 14
    '}' (125) 13 14
    error (256)
    TK_PR_INT <filler> (258) 63
    TK_PR_FLOAT <filler> (259) 64
    TK_PR_BOOL <filler> (260) 65
    TK_PR_IF <node> (261) 27 28
    TK_PR_ELSE <node> (262) 27
    TK_PR_WHILE <node> (263) 29
    TK_PR_RETURN <node> (264) 12
    TK_OC_LE <node> (265) 40
    TK_OC_GE <node> (266) 41
    TK_OC_EQ <node> (267) 35
    TK_OC_NE <node> (268) 36
    TK_OC_AND <node> (269) 33
    TK_OC_OR <node> (270) 6 7 31
    TK_IDENTIFICADOR <node> (271) 6 7 8 9 24 25 26 53 57 58
    TK_LIT_INT <node> (272) 59
    TK_LIT_FLOAT <node> (273) 60
    TK_LIT_FALSE <node> (274) 61
    TK_LIT_TRUE <node> (275) 62
    TK_ERRO <filler> (276)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    program <node> (38)
        on left: 1 2 3
        on right: 0 2 3
    global_var <node> (39)
        on left: 4
        on right: 2
    func <node> (40)
        on left: 5
        on right: 3
    header <node> (41)
        on left: 6 7
        on right: 5
    par_list <node> (42)
        on left: 8 9
        on right: 6 8
    arg_list <node> (43)
        on left: 10 11
        on right: 11 25
    ret_comm <node> (44)
        on left: 12
        on right: 21
    comm_block <node> (45)
        on left: 13 14
        on right: 5 17 27 28 29
    comm_lst <node> (46)
        on left: 15 16
        on right: 14 16
    comm <node> (47)
        on left: 17 18 19 20 21 22
        on right: 15 16
    var_decl <node> (48)
        on left: 23
        on right: 4 18
    attrib_comm <node> (49)
        on left: 24
        on right: 19
    func_call <node> (50)
        on left: 25 26
        on right: 20 55
    flux_ctrl <node> (51)
        on left: 27 28 29
        on right: 22
    exp <node> (52)
        on left: 30
        on right: 10 11 12 24 27 28 29 56
    or_exp <node> (53)
        on left: 31 32
        on right: 30 31
    and_exp <node> (54)
        on left: 33 34
        on right: 31 32 33
    eq_exp <node> (55)
        on left: 35 36 37
        on right: 33 34 35 36
    comp_exp <node> (56)
        on left: 38 39 40 41 42
        on right: 35 36 37 38 39 40 41
    sum_exp <node> (57)
        on left: 43 44 45
        on right: 38 39 40 41 42 43 44
    mult_exp <node> (58)
        on left: 46 47 48 49
        on right: 43 44 45 46 47 48
    un_exp <node> (59)
        on left: 50 51 52
        on right: 46 47 48 49 50 51
    operand <node> (60)
        on left: 53 54 55 56
        on right: 52
    id_list <node> (61)
        on left: 57 58
        on right: 23 58
    lit <node> (62)
        on left: 59 60 61 62
        on right: 54
    type <filler> (63)
        on left: 63 64 65
        on right: 6 7 8 9 23
    new_table (64)
        on left: 66
        on right: 6 7 17 27 28 29
    cleanup_table (65)
        on left: 67
        on right: 5 17 27 28 29


State 0

    0 $accept: • program $end

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    '('          shift, and go to state 4

    $default  reduce using rule 1 (program)

    program     go to state 5
    global_var  go to state 6
    func        go to state 7
    header      go to state 8
    var_decl    go to state 9
    type        go to state 10


State 1

   63 type: TK_PR_INT •

    $default  reduce using rule 63 (type)


State 2

   64 type: TK_PR_FLOAT •

    $default  reduce using rule 64 (type)


State 3

   65 type: TK_PR_BOOL •

    $default  reduce using rule 65 (type)


State 4

    6 header: '(' • new_table par_list ')' TK_OC_OR type '/' TK_IDENTIFICADOR
    7       | '(' • new_table ')' TK_OC_OR type '/' TK_IDENTIFICADOR

    $default  reduce using rule 66 (new_table)

    new_table  go to state 11


State 5

    0 $accept: program • $end

    $end  shift, and go to state 12


State 6

    2 program: global_var • program

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    '('          shift, and go to state 4

    $default  reduce using rule 1 (program)

    program     go to state 13
    global_var  go to state 6
    func        go to state 7
    header      go to state 8
    var_decl    go to state 9
    type        go to state 10


State 7

    3 program: func • program

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    '('          shift, and go to state 4

    $default  reduce using rule 1 (program)

    program     go to state 14
    global_var  go to state 6
    func        go to state 7
    header      go to state 8
    var_decl    go to state 9
    type        go to state 10


State 8

    5 func: header • comm_block cleanup_table

    '{'  shift, and go to state 15

    comm_block  go to state 16


State 9

    4 global_var: var_decl • ','

    ','  shift, and go to state 17


State 10

   23 var_decl: type • id_list

    TK_IDENTIFICADOR  shift, and go to state 18

    id_list  go to state 19


State 11

    6 header: '(' new_table • par_list ')' TK_OC_OR type '/' TK_IDENTIFICADOR
    7       | '(' new_table • ')' TK_OC_OR type '/' TK_IDENTIFICADOR

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    ')'          shift, and go to state 20

    par_list  go to state 21
    type      go to state 22


State 12

    0 $accept: program $end •

    $default  accept


State 13

    2 program: global_var program •

    $default  reduce using rule 2 (program)


State 14

    3 program: func program •

    $default  reduce using rule 3 (program)


State 15

   13 comm_block: '{' • '}'
   14           | '{' • comm_lst '}'

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_IF          shift, and go to state 23
    TK_PR_WHILE       shift, and go to state 24
    TK_PR_RETURN      shift, and go to state 25
    TK_IDENTIFICADOR  shift, and go to state 26
    '}'               shift, and go to state 27

    $default  reduce using rule 66 (new_table)

    ret_comm     go to state 28
    comm_lst     go to state 29
    comm         go to state 30
    var_decl     go to state 31
    attrib_comm  go to state 32
    func_call    go to state 33
    flux_ctrl    go to state 34
    type         go to state 10
    new_table    go to state 35


State 16

    5 func: header comm_block • cleanup_table

    $default  reduce using rule 67 (cleanup_table)

    cleanup_table  go to state 36


State 17

    4 global_var: var_decl ',' •

    $default  reduce using rule 4 (global_var)


State 18

   57 id_list: TK_IDENTIFICADOR •

    $default  reduce using rule 57 (id_list)


State 19

   23 var_decl: type id_list •
   58 id_list: id_list • ';' TK_IDENTIFICADOR

    ';'  shift, and go to state 37

    $default  reduce using rule 23 (var_decl)


State 20

    7 header: '(' new_table ')' • TK_OC_OR type '/' TK_IDENTIFICADOR

    TK_OC_OR  shift, and go to state 38


State 21

    6 header: '(' new_table par_list • ')' TK_OC_OR type '/' TK_IDENTIFICADOR
    8 par_list: par_list • ';' type TK_IDENTIFICADOR

    ')'  shift, and go to state 39
    ';'  shift, and go to state 40


State 22

    9 par_list: type • TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 41


State 23

   27 flux_ctrl: TK_PR_IF • '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   28          | TK_PR_IF • '(' exp ')' new_table comm_block cleanup_table

    '('  shift, and go to state 42


State 24

   29 flux_ctrl: TK_PR_WHILE • '(' exp ')' new_table comm_block cleanup_table

    '('  shift, and go to state 43


State 25

   12 ret_comm: TK_PR_RETURN • exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 53
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 26

   24 attrib_comm: TK_IDENTIFICADOR • '=' exp
   25 func_call: TK_IDENTIFICADOR • '(' arg_list ')'
   26          | TK_IDENTIFICADOR • '(' ')'

    '='  shift, and go to state 63
    '('  shift, and go to state 64


State 27

   13 comm_block: '{' '}' •

    $default  reduce using rule 13 (comm_block)


State 28

   21 comm: ret_comm •

    $default  reduce using rule 21 (comm)


State 29

   14 comm_block: '{' comm_lst • '}'
   16 comm_lst: comm_lst • comm ','

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_IF          shift, and go to state 23
    TK_PR_WHILE       shift, and go to state 24
    TK_PR_RETURN      shift, and go to state 25
    TK_IDENTIFICADOR  shift, and go to state 26
    '}'               shift, and go to state 65

    $default  reduce using rule 66 (new_table)

    ret_comm     go to state 28
    comm         go to state 66
    var_decl     go to state 31
    attrib_comm  go to state 32
    func_call    go to state 33
    flux_ctrl    go to state 34
    type         go to state 10
    new_table    go to state 35


State 30

   15 comm_lst: comm • ','

    ','  shift, and go to state 67


State 31

   18 comm: var_decl •

    $default  reduce using rule 18 (comm)


State 32

   19 comm: attrib_comm •

    $default  reduce using rule 19 (comm)


State 33

   20 comm: func_call •

    $default  reduce using rule 20 (comm)


State 34

   22 comm: flux_ctrl •

    $default  reduce using rule 22 (comm)


State 35

   17 comm: new_table • comm_block cleanup_table

    '{'  shift, and go to state 15

    comm_block  go to state 68


State 36

    5 func: header comm_block cleanup_table •

    $default  reduce using rule 5 (func)


State 37

   58 id_list: id_list ';' • TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 69


State 38

    7 header: '(' new_table ')' TK_OC_OR • type '/' TK_IDENTIFICADOR

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3

    type  go to state 70


State 39

    6 header: '(' new_table par_list ')' • TK_OC_OR type '/' TK_IDENTIFICADOR

    TK_OC_OR  shift, and go to state 71


State 40

    8 par_list: par_list ';' • type TK_IDENTIFICADOR

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3

    type  go to state 72


State 41

    9 par_list: type TK_IDENTIFICADOR •

    $default  reduce using rule 9 (par_list)


State 42

   27 flux_ctrl: TK_PR_IF '(' • exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   28          | TK_PR_IF '(' • exp ')' new_table comm_block cleanup_table

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 73
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 43

   29 flux_ctrl: TK_PR_WHILE '(' • exp ')' new_table comm_block cleanup_table

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 74
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 44

   50 un_exp: '-' • un_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    un_exp     go to state 75
    operand    go to state 61
    lit        go to state 62


State 45

   51 un_exp: '!' • un_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    un_exp     go to state 76
    operand    go to state 61
    lit        go to state 62


State 46

   25 func_call: TK_IDENTIFICADOR • '(' arg_list ')'
   26          | TK_IDENTIFICADOR • '(' ')'
   53 operand: TK_IDENTIFICADOR •

    '('  shift, and go to state 64

    $default  reduce using rule 53 (operand)


State 47

   59 lit: TK_LIT_INT •

    $default  reduce using rule 59 (lit)


State 48

   60 lit: TK_LIT_FLOAT •

    $default  reduce using rule 60 (lit)


State 49

   61 lit: TK_LIT_FALSE •

    $default  reduce using rule 61 (lit)


State 50

   62 lit: TK_LIT_TRUE •

    $default  reduce using rule 62 (lit)


State 51

   56 operand: '(' • exp ')'

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 77
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 52

   55 operand: func_call •

    $default  reduce using rule 55 (operand)


State 53

   12 ret_comm: TK_PR_RETURN exp •

    $default  reduce using rule 12 (ret_comm)


State 54

   30 exp: or_exp •
   31 or_exp: or_exp • TK_OC_OR and_exp

    TK_OC_OR  shift, and go to state 78

    $default  reduce using rule 30 (exp)


State 55

   32 or_exp: and_exp •
   33 and_exp: and_exp • TK_OC_AND eq_exp

    TK_OC_AND  shift, and go to state 79

    $default  reduce using rule 32 (or_exp)


State 56

   34 and_exp: eq_exp •
   35 eq_exp: eq_exp • TK_OC_EQ comp_exp
   36       | eq_exp • TK_OC_NE comp_exp

    TK_OC_EQ  shift, and go to state 80
    TK_OC_NE  shift, and go to state 81

    $default  reduce using rule 34 (and_exp)


State 57

   37 eq_exp: comp_exp •
   38 comp_exp: comp_exp • '<' sum_exp
   39         | comp_exp • '>' sum_exp
   40         | comp_exp • TK_OC_LE sum_exp
   41         | comp_exp • TK_OC_GE sum_exp

    '<'       shift, and go to state 82
    '>'       shift, and go to state 83
    TK_OC_LE  shift, and go to state 84
    TK_OC_GE  shift, and go to state 85

    $default  reduce using rule 37 (eq_exp)


State 58

   42 comp_exp: sum_exp •
   43 sum_exp: sum_exp • '+' mult_exp
   44        | sum_exp • '-' mult_exp

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 42 (comp_exp)


State 59

   45 sum_exp: mult_exp •
   46 mult_exp: mult_exp • '*' un_exp
   47         | mult_exp • '/' un_exp
   48         | mult_exp • '%' un_exp

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 45 (sum_exp)


State 60

   49 mult_exp: un_exp •

    $default  reduce using rule 49 (mult_exp)


State 61

   52 un_exp: operand •

    $default  reduce using rule 52 (un_exp)


State 62

   54 operand: lit •

    $default  reduce using rule 54 (operand)


State 63

   24 attrib_comm: TK_IDENTIFICADOR '=' • exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 91
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 64

   25 func_call: TK_IDENTIFICADOR '(' • arg_list ')'
   26          | TK_IDENTIFICADOR '(' • ')'

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51
    ')'               shift, and go to state 92

    arg_list   go to state 93
    func_call  go to state 52
    exp        go to state 94
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 65

   14 comm_block: '{' comm_lst '}' •

    $default  reduce using rule 14 (comm_block)


State 66

   16 comm_lst: comm_lst comm • ','

    ','  shift, and go to state 95


State 67

   15 comm_lst: comm ',' •

    $default  reduce using rule 15 (comm_lst)


State 68

   17 comm: new_table comm_block • cleanup_table

    $default  reduce using rule 67 (cleanup_table)

    cleanup_table  go to state 96


State 69

   58 id_list: id_list ';' TK_IDENTIFICADOR •

    $default  reduce using rule 58 (id_list)


State 70

    7 header: '(' new_table ')' TK_OC_OR type • '/' TK_IDENTIFICADOR

    '/'  shift, and go to state 97


State 71

    6 header: '(' new_table par_list ')' TK_OC_OR • type '/' TK_IDENTIFICADOR

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3

    type  go to state 98


State 72

    8 par_list: par_list ';' type • TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 99


State 73

   27 flux_ctrl: TK_PR_IF '(' exp • ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   28          | TK_PR_IF '(' exp • ')' new_table comm_block cleanup_table

    ')'  shift, and go to state 100


State 74

   29 flux_ctrl: TK_PR_WHILE '(' exp • ')' new_table comm_block cleanup_table

    ')'  shift, and go to state 101


State 75

   50 un_exp: '-' un_exp •

    $default  reduce using rule 50 (un_exp)


State 76

   51 un_exp: '!' un_exp •

    $default  reduce using rule 51 (un_exp)


State 77

   56 operand: '(' exp • ')'

    ')'  shift, and go to state 102


State 78

   31 or_exp: or_exp TK_OC_OR • and_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    and_exp    go to state 103
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 79

   33 and_exp: and_exp TK_OC_AND • eq_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    eq_exp     go to state 104
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 80

   35 eq_exp: eq_exp TK_OC_EQ • comp_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    comp_exp   go to state 105
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 81

   36 eq_exp: eq_exp TK_OC_NE • comp_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    comp_exp   go to state 106
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 82

   38 comp_exp: comp_exp '<' • sum_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    sum_exp    go to state 107
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 83

   39 comp_exp: comp_exp '>' • sum_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    sum_exp    go to state 108
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 84

   40 comp_exp: comp_exp TK_OC_LE • sum_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    sum_exp    go to state 109
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 85

   41 comp_exp: comp_exp TK_OC_GE • sum_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    sum_exp    go to state 110
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 86

   43 sum_exp: sum_exp '+' • mult_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    mult_exp   go to state 111
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 87

   44 sum_exp: sum_exp '-' • mult_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    mult_exp   go to state 112
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 88

   46 mult_exp: mult_exp '*' • un_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    un_exp     go to state 113
    operand    go to state 61
    lit        go to state 62


State 89

   47 mult_exp: mult_exp '/' • un_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    un_exp     go to state 114
    operand    go to state 61
    lit        go to state 62


State 90

   48 mult_exp: mult_exp '%' • un_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    un_exp     go to state 115
    operand    go to state 61
    lit        go to state 62


State 91

   24 attrib_comm: TK_IDENTIFICADOR '=' exp •

    $default  reduce using rule 24 (attrib_comm)


State 92

   26 func_call: TK_IDENTIFICADOR '(' ')' •

    $default  reduce using rule 26 (func_call)


State 93

   11 arg_list: arg_list • ';' exp
   25 func_call: TK_IDENTIFICADOR '(' arg_list • ')'

    ')'  shift, and go to state 116
    ';'  shift, and go to state 117


State 94

   10 arg_list: exp •

    $default  reduce using rule 10 (arg_list)


State 95

   16 comm_lst: comm_lst comm ',' •

    $default  reduce using rule 16 (comm_lst)


State 96

   17 comm: new_table comm_block cleanup_table •

    $default  reduce using rule 17 (comm)


State 97

    7 header: '(' new_table ')' TK_OC_OR type '/' • TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 118


State 98

    6 header: '(' new_table par_list ')' TK_OC_OR type • '/' TK_IDENTIFICADOR

    '/'  shift, and go to state 119


State 99

    8 par_list: par_list ';' type TK_IDENTIFICADOR •

    $default  reduce using rule 8 (par_list)


State 100

   27 flux_ctrl: TK_PR_IF '(' exp ')' • new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   28          | TK_PR_IF '(' exp ')' • new_table comm_block cleanup_table

    $default  reduce using rule 66 (new_table)

    new_table  go to state 120


State 101

   29 flux_ctrl: TK_PR_WHILE '(' exp ')' • new_table comm_block cleanup_table

    $default  reduce using rule 66 (new_table)

    new_table  go to state 121


State 102

   56 operand: '(' exp ')' •

    $default  reduce using rule 56 (operand)


State 103

   31 or_exp: or_exp TK_OC_OR and_exp •
   33 and_exp: and_exp • TK_OC_AND eq_exp

    TK_OC_AND  shift, and go to state 79

    $default  reduce using rule 31 (or_exp)


State 104

   33 and_exp: and_exp TK_OC_AND eq_exp •
   35 eq_exp: eq_exp • TK_OC_EQ comp_exp
   36       | eq_exp • TK_OC_NE comp_exp

    TK_OC_EQ  shift, and go to state 80
    TK_OC_NE  shift, and go to state 81

    $default  reduce using rule 33 (and_exp)


State 105

   35 eq_exp: eq_exp TK_OC_EQ comp_exp •
   38 comp_exp: comp_exp • '<' sum_exp
   39         | comp_exp • '>' sum_exp
   40         | comp_exp • TK_OC_LE sum_exp
   41         | comp_exp • TK_OC_GE sum_exp

    '<'       shift, and go to state 82
    '>'       shift, and go to state 83
    TK_OC_LE  shift, and go to state 84
    TK_OC_GE  shift, and go to state 85

    $default  reduce using rule 35 (eq_exp)


State 106

   36 eq_exp: eq_exp TK_OC_NE comp_exp •
   38 comp_exp: comp_exp • '<' sum_exp
   39         | comp_exp • '>' sum_exp
   40         | comp_exp • TK_OC_LE sum_exp
   41         | comp_exp • TK_OC_GE sum_exp

    '<'       shift, and go to state 82
    '>'       shift, and go to state 83
    TK_OC_LE  shift, and go to state 84
    TK_OC_GE  shift, and go to state 85

    $default  reduce using rule 36 (eq_exp)


State 107

   38 comp_exp: comp_exp '<' sum_exp •
   43 sum_exp: sum_exp • '+' mult_exp
   44        | sum_exp • '-' mult_exp

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 38 (comp_exp)


State 108

   39 comp_exp: comp_exp '>' sum_exp •
   43 sum_exp: sum_exp • '+' mult_exp
   44        | sum_exp • '-' mult_exp

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 39 (comp_exp)


State 109

   40 comp_exp: comp_exp TK_OC_LE sum_exp •
   43 sum_exp: sum_exp • '+' mult_exp
   44        | sum_exp • '-' mult_exp

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 40 (comp_exp)


State 110

   41 comp_exp: comp_exp TK_OC_GE sum_exp •
   43 sum_exp: sum_exp • '+' mult_exp
   44        | sum_exp • '-' mult_exp

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 41 (comp_exp)


State 111

   43 sum_exp: sum_exp '+' mult_exp •
   46 mult_exp: mult_exp • '*' un_exp
   47         | mult_exp • '/' un_exp
   48         | mult_exp • '%' un_exp

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 43 (sum_exp)


State 112

   44 sum_exp: sum_exp '-' mult_exp •
   46 mult_exp: mult_exp • '*' un_exp
   47         | mult_exp • '/' un_exp
   48         | mult_exp • '%' un_exp

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 44 (sum_exp)


State 113

   46 mult_exp: mult_exp '*' un_exp •

    $default  reduce using rule 46 (mult_exp)


State 114

   47 mult_exp: mult_exp '/' un_exp •

    $default  reduce using rule 47 (mult_exp)


State 115

   48 mult_exp: mult_exp '%' un_exp •

    $default  reduce using rule 48 (mult_exp)


State 116

   25 func_call: TK_IDENTIFICADOR '(' arg_list ')' •

    $default  reduce using rule 25 (func_call)


State 117

   11 arg_list: arg_list ';' • exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 122
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 118

    7 header: '(' new_table ')' TK_OC_OR type '/' TK_IDENTIFICADOR •

    $default  reduce using rule 7 (header)


State 119

    6 header: '(' new_table par_list ')' TK_OC_OR type '/' • TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 123


State 120

   27 flux_ctrl: TK_PR_IF '(' exp ')' new_table • comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   28          | TK_PR_IF '(' exp ')' new_table • comm_block cleanup_table

    '{'  shift, and go to state 15

    comm_block  go to state 124


State 121

   29 flux_ctrl: TK_PR_WHILE '(' exp ')' new_table • comm_block cleanup_table

    '{'  shift, and go to state 15

    comm_block  go to state 125


State 122

   11 arg_list: arg_list ';' exp •

    $default  reduce using rule 11 (arg_list)


State 123

    6 header: '(' new_table par_list ')' TK_OC_OR type '/' TK_IDENTIFICADOR •

    $default  reduce using rule 6 (header)


State 124

   27 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block • cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   28          | TK_PR_IF '(' exp ')' new_table comm_block • cleanup_table

    $default  reduce using rule 67 (cleanup_table)

    cleanup_table  go to state 126


State 125

   29 flux_ctrl: TK_PR_WHILE '(' exp ')' new_table comm_block • cleanup_table

    $default  reduce using rule 67 (cleanup_table)

    cleanup_table  go to state 127


State 126

   27 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table • TK_PR_ELSE new_table comm_block cleanup_table
   28          | TK_PR_IF '(' exp ')' new_table comm_block cleanup_table •

    TK_PR_ELSE  shift, and go to state 128

    $default  reduce using rule 28 (flux_ctrl)


State 127

   29 flux_ctrl: TK_PR_WHILE '(' exp ')' new_table comm_block cleanup_table •

    $default  reduce using rule 29 (flux_ctrl)


State 128

   27 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE • new_table comm_block cleanup_table

    $default  reduce using rule 66 (new_table)

    new_table  go to state 129


State 129

   27 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table • comm_block cleanup_table

    '{'  shift, and go to state 15

    comm_block  go to state 130


State 130

   27 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block • cleanup_table

    $default  reduce using rule 67 (cleanup_table)

    cleanup_table  go to state 131


State 131

   27 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table •

    $default  reduce using rule 27 (flux_ctrl)
