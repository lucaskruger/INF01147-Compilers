Terminals unused in grammar

    TK_ERRO


Grammar

    0 $accept: program $end

    1 program: ε
    2        | global_var program
    3        | func program

    4 global_var: var_decl ','

    5 func: header comm_block cleanup_table

    6 $@1: ε

    7 header: '(' new_table par_list ')' TK_OC_OR type $@1 '/' TK_IDENTIFICADOR

    8 $@2: ε

    9 header: '(' new_table ')' TK_OC_OR type $@2 '/' TK_IDENTIFICADOR

   10 $@3: ε

   11 par_list: par_list ';' type $@3 TK_IDENTIFICADOR

   12 $@4: ε

   13 par_list: type $@4 TK_IDENTIFICADOR

   14 arg_list: exp
   15         | arg_list ';' exp

   16 ret_comm: TK_PR_RETURN exp

   17 comm_block: '{' '}'
   18           | '{' comm_lst '}'

   19 comm_lst: comm ','
   20         | comm_lst comm ','

   21 comm: new_table comm_block cleanup_table
   22     | var_decl
   23     | attrib_comm
   24     | func_call
   25     | ret_comm
   26     | flux_ctrl

   27 $@5: ε

   28 var_decl: type $@5 id_list

   29 attrib_comm: TK_IDENTIFICADOR '=' exp

   30 func_call: TK_IDENTIFICADOR '(' arg_list ')'
   31          | TK_IDENTIFICADOR '(' ')'

   32 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   33          | TK_PR_IF '(' exp ')' new_table comm_block cleanup_table
   34          | TK_PR_WHILE '(' exp ')' new_table comm_block cleanup_table

   35 exp: or_exp

   36 or_exp: or_exp TK_OC_OR and_exp
   37       | and_exp

   38 and_exp: and_exp TK_OC_AND eq_exp
   39        | eq_exp

   40 eq_exp: eq_exp TK_OC_EQ comp_exp
   41       | eq_exp TK_OC_NE comp_exp
   42       | comp_exp

   43 comp_exp: comp_exp '<' sum_exp
   44         | comp_exp '>' sum_exp
   45         | comp_exp TK_OC_LE sum_exp
   46         | comp_exp TK_OC_GE sum_exp
   47         | sum_exp

   48 sum_exp: sum_exp '+' mult_exp
   49        | sum_exp '-' mult_exp
   50        | mult_exp

   51 mult_exp: mult_exp '*' un_exp
   52         | mult_exp '/' un_exp
   53         | mult_exp '%' un_exp
   54         | un_exp

   55 un_exp: '-' un_exp
   56       | '!' un_exp
   57       | operand

   58 operand: TK_IDENTIFICADOR
   59        | lit
   60        | func_call
   61        | '(' exp ')'

   62 id_list: TK_IDENTIFICADOR
   63        | id_list ';' TK_IDENTIFICADOR

   64 lit: TK_LIT_INT
   65    | TK_LIT_FLOAT
   66    | TK_LIT_FALSE
   67    | TK_LIT_TRUE

   68 type: TK_PR_INT
   69     | TK_PR_FLOAT
   70     | TK_PR_BOOL

   71 new_table: ε

   72 cleanup_table: ε


Terminals, with rules where they appear

    $end (0) 0
    '!' <node> (33) 56
    '%' <node> (37) 53
    '(' (40) 7 9 30 31 32 33 34 61
    ')' (41) 7 9 30 31 32 33 34 61
    '*' <node> (42) 51
    '+' <node> (43) 48
    ',' (44) 4 19 20
    '-' <node> (45) 49 55
    '/' <node> (47) 7 9 52
    ';' (59) 11 15 63
    '<' <node> (60) 43
    '=' <node> (61) 29
    '>' <node> (62) 44
    '{' (123) 17 18
    '}' (125) 17 18
    error (256)
    TK_PR_INT <filler> (258) 68
    TK_PR_FLOAT <filler> (259) 69
    TK_PR_BOOL <filler> (260) 70
    TK_PR_IF <node> (261) 32 33
    TK_PR_ELSE <node> (262) 32
    TK_PR_WHILE <node> (263) 34
    TK_PR_RETURN <node> (264) 16
    TK_OC_LE <node> (265) 45
    TK_OC_GE <node> (266) 46
    TK_OC_EQ <node> (267) 40
    TK_OC_NE <node> (268) 41
    TK_OC_AND <node> (269) 38
    TK_OC_OR <node> (270) 7 9 36
    TK_IDENTIFICADOR <node> (271) 7 9 11 13 29 30 31 58 62 63
    TK_LIT_INT <node> (272) 64
    TK_LIT_FLOAT <node> (273) 65
    TK_LIT_FALSE <node> (274) 66
    TK_LIT_TRUE <node> (275) 67
    TK_ERRO <filler> (276)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    program <node> (38)
        on left: 1 2 3
        on right: 0 2 3
    global_var <node> (39)
        on left: 4
        on right: 2
    func <node> (40)
        on left: 5
        on right: 3
    header <node> (41)
        on left: 7 9
        on right: 5
    $@1 (42)
        on left: 6
        on right: 7
    $@2 (43)
        on left: 8
        on right: 9
    par_list <node> (44)
        on left: 11 13
        on right: 7 11
    $@3 (45)
        on left: 10
        on right: 11
    $@4 (46)
        on left: 12
        on right: 13
    arg_list <node> (47)
        on left: 14 15
        on right: 15 30
    ret_comm <node> (48)
        on left: 16
        on right: 25
    comm_block <node> (49)
        on left: 17 18
        on right: 5 21 32 33 34
    comm_lst <node> (50)
        on left: 19 20
        on right: 18 20
    comm <node> (51)
        on left: 21 22 23 24 25 26
        on right: 19 20
    var_decl <node> (52)
        on left: 28
        on right: 4 22
    $@5 (53)
        on left: 27
        on right: 28
    attrib_comm <node> (54)
        on left: 29
        on right: 23
    func_call <node> (55)
        on left: 30 31
        on right: 24 60
    flux_ctrl <node> (56)
        on left: 32 33 34
        on right: 26
    exp <node> (57)
        on left: 35
        on right: 14 15 16 29 32 33 34 61
    or_exp <node> (58)
        on left: 36 37
        on right: 35 36
    and_exp <node> (59)
        on left: 38 39
        on right: 36 37 38
    eq_exp <node> (60)
        on left: 40 41 42
        on right: 38 39 40 41
    comp_exp <node> (61)
        on left: 43 44 45 46 47
        on right: 40 41 42 43 44 45 46
    sum_exp <node> (62)
        on left: 48 49 50
        on right: 43 44 45 46 47 48 49
    mult_exp <node> (63)
        on left: 51 52 53 54
        on right: 48 49 50 51 52 53
    un_exp <node> (64)
        on left: 55 56 57
        on right: 51 52 53 54 55 56
    operand <node> (65)
        on left: 58 59 60 61
        on right: 57
    id_list <node> (66)
        on left: 62 63
        on right: 28 63
    lit <node> (67)
        on left: 64 65 66 67
        on right: 59
    type <filler> (68)
        on left: 68 69 70
        on right: 7 9 11 13 28
    new_table (69)
        on left: 71
        on right: 7 9 21 32 33 34
    cleanup_table (70)
        on left: 72
        on right: 5 21 32 33 34


State 0

    0 $accept: • program $end

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    '('          shift, and go to state 4

    $default  reduce using rule 1 (program)

    program     go to state 5
    global_var  go to state 6
    func        go to state 7
    header      go to state 8
    var_decl    go to state 9
    type        go to state 10


State 1

   68 type: TK_PR_INT •

    $default  reduce using rule 68 (type)


State 2

   69 type: TK_PR_FLOAT •

    $default  reduce using rule 69 (type)


State 3

   70 type: TK_PR_BOOL •

    $default  reduce using rule 70 (type)


State 4

    7 header: '(' • new_table par_list ')' TK_OC_OR type $@1 '/' TK_IDENTIFICADOR
    9       | '(' • new_table ')' TK_OC_OR type $@2 '/' TK_IDENTIFICADOR

    $default  reduce using rule 71 (new_table)

    new_table  go to state 11


State 5

    0 $accept: program • $end

    $end  shift, and go to state 12


State 6

    2 program: global_var • program

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    '('          shift, and go to state 4

    $default  reduce using rule 1 (program)

    program     go to state 13
    global_var  go to state 6
    func        go to state 7
    header      go to state 8
    var_decl    go to state 9
    type        go to state 10


State 7

    3 program: func • program

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    '('          shift, and go to state 4

    $default  reduce using rule 1 (program)

    program     go to state 14
    global_var  go to state 6
    func        go to state 7
    header      go to state 8
    var_decl    go to state 9
    type        go to state 10


State 8

    5 func: header • comm_block cleanup_table

    '{'  shift, and go to state 15

    comm_block  go to state 16


State 9

    4 global_var: var_decl • ','

    ','  shift, and go to state 17


State 10

   28 var_decl: type • $@5 id_list

    $default  reduce using rule 27 ($@5)

    $@5  go to state 18


State 11

    7 header: '(' new_table • par_list ')' TK_OC_OR type $@1 '/' TK_IDENTIFICADOR
    9       | '(' new_table • ')' TK_OC_OR type $@2 '/' TK_IDENTIFICADOR

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3
    ')'          shift, and go to state 19

    par_list  go to state 20
    type      go to state 21


State 12

    0 $accept: program $end •

    $default  accept


State 13

    2 program: global_var program •

    $default  reduce using rule 2 (program)


State 14

    3 program: func program •

    $default  reduce using rule 3 (program)


State 15

   17 comm_block: '{' • '}'
   18           | '{' • comm_lst '}'

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_IF          shift, and go to state 22
    TK_PR_WHILE       shift, and go to state 23
    TK_PR_RETURN      shift, and go to state 24
    TK_IDENTIFICADOR  shift, and go to state 25
    '}'               shift, and go to state 26

    $default  reduce using rule 71 (new_table)

    ret_comm     go to state 27
    comm_lst     go to state 28
    comm         go to state 29
    var_decl     go to state 30
    attrib_comm  go to state 31
    func_call    go to state 32
    flux_ctrl    go to state 33
    type         go to state 10
    new_table    go to state 34


State 16

    5 func: header comm_block • cleanup_table

    $default  reduce using rule 72 (cleanup_table)

    cleanup_table  go to state 35


State 17

    4 global_var: var_decl ',' •

    $default  reduce using rule 4 (global_var)


State 18

   28 var_decl: type $@5 • id_list

    TK_IDENTIFICADOR  shift, and go to state 36

    id_list  go to state 37


State 19

    9 header: '(' new_table ')' • TK_OC_OR type $@2 '/' TK_IDENTIFICADOR

    TK_OC_OR  shift, and go to state 38


State 20

    7 header: '(' new_table par_list • ')' TK_OC_OR type $@1 '/' TK_IDENTIFICADOR
   11 par_list: par_list • ';' type $@3 TK_IDENTIFICADOR

    ')'  shift, and go to state 39
    ';'  shift, and go to state 40


State 21

   13 par_list: type • $@4 TK_IDENTIFICADOR

    $default  reduce using rule 12 ($@4)

    $@4  go to state 41


State 22

   32 flux_ctrl: TK_PR_IF • '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   33          | TK_PR_IF • '(' exp ')' new_table comm_block cleanup_table

    '('  shift, and go to state 42


State 23

   34 flux_ctrl: TK_PR_WHILE • '(' exp ')' new_table comm_block cleanup_table

    '('  shift, and go to state 43


State 24

   16 ret_comm: TK_PR_RETURN • exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 53
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 25

   29 attrib_comm: TK_IDENTIFICADOR • '=' exp
   30 func_call: TK_IDENTIFICADOR • '(' arg_list ')'
   31          | TK_IDENTIFICADOR • '(' ')'

    '='  shift, and go to state 63
    '('  shift, and go to state 64


State 26

   17 comm_block: '{' '}' •

    $default  reduce using rule 17 (comm_block)


State 27

   25 comm: ret_comm •

    $default  reduce using rule 25 (comm)


State 28

   18 comm_block: '{' comm_lst • '}'
   20 comm_lst: comm_lst • comm ','

    TK_PR_INT         shift, and go to state 1
    TK_PR_FLOAT       shift, and go to state 2
    TK_PR_BOOL        shift, and go to state 3
    TK_PR_IF          shift, and go to state 22
    TK_PR_WHILE       shift, and go to state 23
    TK_PR_RETURN      shift, and go to state 24
    TK_IDENTIFICADOR  shift, and go to state 25
    '}'               shift, and go to state 65

    $default  reduce using rule 71 (new_table)

    ret_comm     go to state 27
    comm         go to state 66
    var_decl     go to state 30
    attrib_comm  go to state 31
    func_call    go to state 32
    flux_ctrl    go to state 33
    type         go to state 10
    new_table    go to state 34


State 29

   19 comm_lst: comm • ','

    ','  shift, and go to state 67


State 30

   22 comm: var_decl •

    $default  reduce using rule 22 (comm)


State 31

   23 comm: attrib_comm •

    $default  reduce using rule 23 (comm)


State 32

   24 comm: func_call •

    $default  reduce using rule 24 (comm)


State 33

   26 comm: flux_ctrl •

    $default  reduce using rule 26 (comm)


State 34

   21 comm: new_table • comm_block cleanup_table

    '{'  shift, and go to state 15

    comm_block  go to state 68


State 35

    5 func: header comm_block cleanup_table •

    $default  reduce using rule 5 (func)


State 36

   62 id_list: TK_IDENTIFICADOR •

    $default  reduce using rule 62 (id_list)


State 37

   28 var_decl: type $@5 id_list •
   63 id_list: id_list • ';' TK_IDENTIFICADOR

    ';'  shift, and go to state 69

    $default  reduce using rule 28 (var_decl)


State 38

    9 header: '(' new_table ')' TK_OC_OR • type $@2 '/' TK_IDENTIFICADOR

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3

    type  go to state 70


State 39

    7 header: '(' new_table par_list ')' • TK_OC_OR type $@1 '/' TK_IDENTIFICADOR

    TK_OC_OR  shift, and go to state 71


State 40

   11 par_list: par_list ';' • type $@3 TK_IDENTIFICADOR

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3

    type  go to state 72


State 41

   13 par_list: type $@4 • TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 73


State 42

   32 flux_ctrl: TK_PR_IF '(' • exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   33          | TK_PR_IF '(' • exp ')' new_table comm_block cleanup_table

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 74
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 43

   34 flux_ctrl: TK_PR_WHILE '(' • exp ')' new_table comm_block cleanup_table

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 75
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 44

   55 un_exp: '-' • un_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    un_exp     go to state 76
    operand    go to state 61
    lit        go to state 62


State 45

   56 un_exp: '!' • un_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    un_exp     go to state 77
    operand    go to state 61
    lit        go to state 62


State 46

   30 func_call: TK_IDENTIFICADOR • '(' arg_list ')'
   31          | TK_IDENTIFICADOR • '(' ')'
   58 operand: TK_IDENTIFICADOR •

    '('  shift, and go to state 64

    $default  reduce using rule 58 (operand)


State 47

   64 lit: TK_LIT_INT •

    $default  reduce using rule 64 (lit)


State 48

   65 lit: TK_LIT_FLOAT •

    $default  reduce using rule 65 (lit)


State 49

   66 lit: TK_LIT_FALSE •

    $default  reduce using rule 66 (lit)


State 50

   67 lit: TK_LIT_TRUE •

    $default  reduce using rule 67 (lit)


State 51

   61 operand: '(' • exp ')'

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 78
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 52

   60 operand: func_call •

    $default  reduce using rule 60 (operand)


State 53

   16 ret_comm: TK_PR_RETURN exp •

    $default  reduce using rule 16 (ret_comm)


State 54

   35 exp: or_exp •
   36 or_exp: or_exp • TK_OC_OR and_exp

    TK_OC_OR  shift, and go to state 79

    $default  reduce using rule 35 (exp)


State 55

   37 or_exp: and_exp •
   38 and_exp: and_exp • TK_OC_AND eq_exp

    TK_OC_AND  shift, and go to state 80

    $default  reduce using rule 37 (or_exp)


State 56

   39 and_exp: eq_exp •
   40 eq_exp: eq_exp • TK_OC_EQ comp_exp
   41       | eq_exp • TK_OC_NE comp_exp

    TK_OC_EQ  shift, and go to state 81
    TK_OC_NE  shift, and go to state 82

    $default  reduce using rule 39 (and_exp)


State 57

   42 eq_exp: comp_exp •
   43 comp_exp: comp_exp • '<' sum_exp
   44         | comp_exp • '>' sum_exp
   45         | comp_exp • TK_OC_LE sum_exp
   46         | comp_exp • TK_OC_GE sum_exp

    '<'       shift, and go to state 83
    '>'       shift, and go to state 84
    TK_OC_LE  shift, and go to state 85
    TK_OC_GE  shift, and go to state 86

    $default  reduce using rule 42 (eq_exp)


State 58

   47 comp_exp: sum_exp •
   48 sum_exp: sum_exp • '+' mult_exp
   49        | sum_exp • '-' mult_exp

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88

    $default  reduce using rule 47 (comp_exp)


State 59

   50 sum_exp: mult_exp •
   51 mult_exp: mult_exp • '*' un_exp
   52         | mult_exp • '/' un_exp
   53         | mult_exp • '%' un_exp

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 50 (sum_exp)


State 60

   54 mult_exp: un_exp •

    $default  reduce using rule 54 (mult_exp)


State 61

   57 un_exp: operand •

    $default  reduce using rule 57 (un_exp)


State 62

   59 operand: lit •

    $default  reduce using rule 59 (operand)


State 63

   29 attrib_comm: TK_IDENTIFICADOR '=' • exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 92
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 64

   30 func_call: TK_IDENTIFICADOR '(' • arg_list ')'
   31          | TK_IDENTIFICADOR '(' • ')'

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51
    ')'               shift, and go to state 93

    arg_list   go to state 94
    func_call  go to state 52
    exp        go to state 95
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 65

   18 comm_block: '{' comm_lst '}' •

    $default  reduce using rule 18 (comm_block)


State 66

   20 comm_lst: comm_lst comm • ','

    ','  shift, and go to state 96


State 67

   19 comm_lst: comm ',' •

    $default  reduce using rule 19 (comm_lst)


State 68

   21 comm: new_table comm_block • cleanup_table

    $default  reduce using rule 72 (cleanup_table)

    cleanup_table  go to state 97


State 69

   63 id_list: id_list ';' • TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 98


State 70

    9 header: '(' new_table ')' TK_OC_OR type • $@2 '/' TK_IDENTIFICADOR

    $default  reduce using rule 8 ($@2)

    $@2  go to state 99


State 71

    7 header: '(' new_table par_list ')' TK_OC_OR • type $@1 '/' TK_IDENTIFICADOR

    TK_PR_INT    shift, and go to state 1
    TK_PR_FLOAT  shift, and go to state 2
    TK_PR_BOOL   shift, and go to state 3

    type  go to state 100


State 72

   11 par_list: par_list ';' type • $@3 TK_IDENTIFICADOR

    $default  reduce using rule 10 ($@3)

    $@3  go to state 101


State 73

   13 par_list: type $@4 TK_IDENTIFICADOR •

    $default  reduce using rule 13 (par_list)


State 74

   32 flux_ctrl: TK_PR_IF '(' exp • ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   33          | TK_PR_IF '(' exp • ')' new_table comm_block cleanup_table

    ')'  shift, and go to state 102


State 75

   34 flux_ctrl: TK_PR_WHILE '(' exp • ')' new_table comm_block cleanup_table

    ')'  shift, and go to state 103


State 76

   55 un_exp: '-' un_exp •

    $default  reduce using rule 55 (un_exp)


State 77

   56 un_exp: '!' un_exp •

    $default  reduce using rule 56 (un_exp)


State 78

   61 operand: '(' exp • ')'

    ')'  shift, and go to state 104


State 79

   36 or_exp: or_exp TK_OC_OR • and_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    and_exp    go to state 105
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 80

   38 and_exp: and_exp TK_OC_AND • eq_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    eq_exp     go to state 106
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 81

   40 eq_exp: eq_exp TK_OC_EQ • comp_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    comp_exp   go to state 107
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 82

   41 eq_exp: eq_exp TK_OC_NE • comp_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    comp_exp   go to state 108
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 83

   43 comp_exp: comp_exp '<' • sum_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    sum_exp    go to state 109
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 84

   44 comp_exp: comp_exp '>' • sum_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    sum_exp    go to state 110
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 85

   45 comp_exp: comp_exp TK_OC_LE • sum_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    sum_exp    go to state 111
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 86

   46 comp_exp: comp_exp TK_OC_GE • sum_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    sum_exp    go to state 112
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 87

   48 sum_exp: sum_exp '+' • mult_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    mult_exp   go to state 113
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 88

   49 sum_exp: sum_exp '-' • mult_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    mult_exp   go to state 114
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 89

   51 mult_exp: mult_exp '*' • un_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    un_exp     go to state 115
    operand    go to state 61
    lit        go to state 62


State 90

   52 mult_exp: mult_exp '/' • un_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    un_exp     go to state 116
    operand    go to state 61
    lit        go to state 62


State 91

   53 mult_exp: mult_exp '%' • un_exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    un_exp     go to state 117
    operand    go to state 61
    lit        go to state 62


State 92

   29 attrib_comm: TK_IDENTIFICADOR '=' exp •

    $default  reduce using rule 29 (attrib_comm)


State 93

   31 func_call: TK_IDENTIFICADOR '(' ')' •

    $default  reduce using rule 31 (func_call)


State 94

   15 arg_list: arg_list • ';' exp
   30 func_call: TK_IDENTIFICADOR '(' arg_list • ')'

    ')'  shift, and go to state 118
    ';'  shift, and go to state 119


State 95

   14 arg_list: exp •

    $default  reduce using rule 14 (arg_list)


State 96

   20 comm_lst: comm_lst comm ',' •

    $default  reduce using rule 20 (comm_lst)


State 97

   21 comm: new_table comm_block cleanup_table •

    $default  reduce using rule 21 (comm)


State 98

   63 id_list: id_list ';' TK_IDENTIFICADOR •

    $default  reduce using rule 63 (id_list)


State 99

    9 header: '(' new_table ')' TK_OC_OR type $@2 • '/' TK_IDENTIFICADOR

    '/'  shift, and go to state 120


State 100

    7 header: '(' new_table par_list ')' TK_OC_OR type • $@1 '/' TK_IDENTIFICADOR

    $default  reduce using rule 6 ($@1)

    $@1  go to state 121


State 101

   11 par_list: par_list ';' type $@3 • TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 122


State 102

   32 flux_ctrl: TK_PR_IF '(' exp ')' • new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   33          | TK_PR_IF '(' exp ')' • new_table comm_block cleanup_table

    $default  reduce using rule 71 (new_table)

    new_table  go to state 123


State 103

   34 flux_ctrl: TK_PR_WHILE '(' exp ')' • new_table comm_block cleanup_table

    $default  reduce using rule 71 (new_table)

    new_table  go to state 124


State 104

   61 operand: '(' exp ')' •

    $default  reduce using rule 61 (operand)


State 105

   36 or_exp: or_exp TK_OC_OR and_exp •
   38 and_exp: and_exp • TK_OC_AND eq_exp

    TK_OC_AND  shift, and go to state 80

    $default  reduce using rule 36 (or_exp)


State 106

   38 and_exp: and_exp TK_OC_AND eq_exp •
   40 eq_exp: eq_exp • TK_OC_EQ comp_exp
   41       | eq_exp • TK_OC_NE comp_exp

    TK_OC_EQ  shift, and go to state 81
    TK_OC_NE  shift, and go to state 82

    $default  reduce using rule 38 (and_exp)


State 107

   40 eq_exp: eq_exp TK_OC_EQ comp_exp •
   43 comp_exp: comp_exp • '<' sum_exp
   44         | comp_exp • '>' sum_exp
   45         | comp_exp • TK_OC_LE sum_exp
   46         | comp_exp • TK_OC_GE sum_exp

    '<'       shift, and go to state 83
    '>'       shift, and go to state 84
    TK_OC_LE  shift, and go to state 85
    TK_OC_GE  shift, and go to state 86

    $default  reduce using rule 40 (eq_exp)


State 108

   41 eq_exp: eq_exp TK_OC_NE comp_exp •
   43 comp_exp: comp_exp • '<' sum_exp
   44         | comp_exp • '>' sum_exp
   45         | comp_exp • TK_OC_LE sum_exp
   46         | comp_exp • TK_OC_GE sum_exp

    '<'       shift, and go to state 83
    '>'       shift, and go to state 84
    TK_OC_LE  shift, and go to state 85
    TK_OC_GE  shift, and go to state 86

    $default  reduce using rule 41 (eq_exp)


State 109

   43 comp_exp: comp_exp '<' sum_exp •
   48 sum_exp: sum_exp • '+' mult_exp
   49        | sum_exp • '-' mult_exp

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88

    $default  reduce using rule 43 (comp_exp)


State 110

   44 comp_exp: comp_exp '>' sum_exp •
   48 sum_exp: sum_exp • '+' mult_exp
   49        | sum_exp • '-' mult_exp

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88

    $default  reduce using rule 44 (comp_exp)


State 111

   45 comp_exp: comp_exp TK_OC_LE sum_exp •
   48 sum_exp: sum_exp • '+' mult_exp
   49        | sum_exp • '-' mult_exp

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88

    $default  reduce using rule 45 (comp_exp)


State 112

   46 comp_exp: comp_exp TK_OC_GE sum_exp •
   48 sum_exp: sum_exp • '+' mult_exp
   49        | sum_exp • '-' mult_exp

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88

    $default  reduce using rule 46 (comp_exp)


State 113

   48 sum_exp: sum_exp '+' mult_exp •
   51 mult_exp: mult_exp • '*' un_exp
   52         | mult_exp • '/' un_exp
   53         | mult_exp • '%' un_exp

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 48 (sum_exp)


State 114

   49 sum_exp: sum_exp '-' mult_exp •
   51 mult_exp: mult_exp • '*' un_exp
   52         | mult_exp • '/' un_exp
   53         | mult_exp • '%' un_exp

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 49 (sum_exp)


State 115

   51 mult_exp: mult_exp '*' un_exp •

    $default  reduce using rule 51 (mult_exp)


State 116

   52 mult_exp: mult_exp '/' un_exp •

    $default  reduce using rule 52 (mult_exp)


State 117

   53 mult_exp: mult_exp '%' un_exp •

    $default  reduce using rule 53 (mult_exp)


State 118

   30 func_call: TK_IDENTIFICADOR '(' arg_list ')' •

    $default  reduce using rule 30 (func_call)


State 119

   15 arg_list: arg_list ';' • exp

    '-'               shift, and go to state 44
    '!'               shift, and go to state 45
    TK_IDENTIFICADOR  shift, and go to state 46
    TK_LIT_INT        shift, and go to state 47
    TK_LIT_FLOAT      shift, and go to state 48
    TK_LIT_FALSE      shift, and go to state 49
    TK_LIT_TRUE       shift, and go to state 50
    '('               shift, and go to state 51

    func_call  go to state 52
    exp        go to state 125
    or_exp     go to state 54
    and_exp    go to state 55
    eq_exp     go to state 56
    comp_exp   go to state 57
    sum_exp    go to state 58
    mult_exp   go to state 59
    un_exp     go to state 60
    operand    go to state 61
    lit        go to state 62


State 120

    9 header: '(' new_table ')' TK_OC_OR type $@2 '/' • TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 126


State 121

    7 header: '(' new_table par_list ')' TK_OC_OR type $@1 • '/' TK_IDENTIFICADOR

    '/'  shift, and go to state 127


State 122

   11 par_list: par_list ';' type $@3 TK_IDENTIFICADOR •

    $default  reduce using rule 11 (par_list)


State 123

   32 flux_ctrl: TK_PR_IF '(' exp ')' new_table • comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   33          | TK_PR_IF '(' exp ')' new_table • comm_block cleanup_table

    '{'  shift, and go to state 15

    comm_block  go to state 128


State 124

   34 flux_ctrl: TK_PR_WHILE '(' exp ')' new_table • comm_block cleanup_table

    '{'  shift, and go to state 15

    comm_block  go to state 129


State 125

   15 arg_list: arg_list ';' exp •

    $default  reduce using rule 15 (arg_list)


State 126

    9 header: '(' new_table ')' TK_OC_OR type $@2 '/' TK_IDENTIFICADOR •

    $default  reduce using rule 9 (header)


State 127

    7 header: '(' new_table par_list ')' TK_OC_OR type $@1 '/' • TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 130


State 128

   32 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block • cleanup_table TK_PR_ELSE new_table comm_block cleanup_table
   33          | TK_PR_IF '(' exp ')' new_table comm_block • cleanup_table

    $default  reduce using rule 72 (cleanup_table)

    cleanup_table  go to state 131


State 129

   34 flux_ctrl: TK_PR_WHILE '(' exp ')' new_table comm_block • cleanup_table

    $default  reduce using rule 72 (cleanup_table)

    cleanup_table  go to state 132


State 130

    7 header: '(' new_table par_list ')' TK_OC_OR type $@1 '/' TK_IDENTIFICADOR •

    $default  reduce using rule 7 (header)


State 131

   32 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table • TK_PR_ELSE new_table comm_block cleanup_table
   33          | TK_PR_IF '(' exp ')' new_table comm_block cleanup_table •

    TK_PR_ELSE  shift, and go to state 133

    $default  reduce using rule 33 (flux_ctrl)


State 132

   34 flux_ctrl: TK_PR_WHILE '(' exp ')' new_table comm_block cleanup_table •

    $default  reduce using rule 34 (flux_ctrl)


State 133

   32 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE • new_table comm_block cleanup_table

    $default  reduce using rule 71 (new_table)

    new_table  go to state 134


State 134

   32 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table • comm_block cleanup_table

    '{'  shift, and go to state 15

    comm_block  go to state 135


State 135

   32 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block • cleanup_table

    $default  reduce using rule 72 (cleanup_table)

    cleanup_table  go to state 136


State 136

   32 flux_ctrl: TK_PR_IF '(' exp ')' new_table comm_block cleanup_table TK_PR_ELSE new_table comm_block cleanup_table •

    $default  reduce using rule 32 (flux_ctrl)
